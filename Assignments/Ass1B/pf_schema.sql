-- Group: A043
-- Student IDs: 29588774, 32205481
-- Assignment 1B
set echo on
SPOOL pf_schema_output.txt

-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-09-13 21:08:50 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE animal CASCADE CONSTRAINTS;

DROP TABLE animaltype CASCADE CONSTRAINTS;

DROP TABLE certificate CASCADE CONSTRAINTS;

DROP TABLE clinic CASCADE CONSTRAINTS;

DROP TABLE drug CASCADE CONSTRAINTS;

DROP TABLE owner CASCADE CONSTRAINTS;

DROP TABLE prescription CASCADE CONSTRAINTS;

DROP TABLE service CASCADE CONSTRAINTS;

DROP TABLE serviceline CASCADE CONSTRAINTS;

DROP TABLE speciality CASCADE CONSTRAINTS;

DROP TABLE training CASCADE CONSTRAINTS;

DROP TABLE vet CASCADE CONSTRAINTS;

DROP TABLE visit CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE animal (
    animal_id       NUMBER(6) NOT NULL,
    animal_name     VARCHAR2(20) NOT NULL,
    animal_yearborn NUMBER(4) NOT NULL,
    animal_alive    CHAR(1) DEFAULT 'Y' NOT NULL,
    animaltype_id   NUMBER(3) NOT NULL,
    owner_id        NUMBER(6) NOT NULL
);

ALTER TABLE animal
    ADD CONSTRAINT chk_animalalive CHECK ( animal_alive IN ( 'N', 'Y' ) );

COMMENT ON COLUMN animal.animal_id IS
    'Unique identifier for animal';

COMMENT ON COLUMN animal.animal_name IS
    'Name of animal';

COMMENT ON COLUMN animal.animal_yearborn IS
    'Year the animal was born';

COMMENT ON COLUMN animal.animal_alive IS
    'Whether animal is alive or not (defaults to Y for yes)';

COMMENT ON COLUMN animal.animaltype_id IS
    'Unique Identifier for Animal Type';

COMMENT ON COLUMN animal.owner_id IS
    'Unique identifier of owner';

ALTER TABLE animal ADD CONSTRAINT animal_pk PRIMARY KEY ( animal_id );

CREATE TABLE animaltype (
    animaltype_id   NUMBER(3) NOT NULL,
    animaltype_name VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN animaltype.animaltype_id IS
    'Unique Identifier for Animal Type';

COMMENT ON COLUMN animaltype.animaltype_name IS
    'Name of Animal Type';

ALTER TABLE animaltype ADD CONSTRAINT animaltype_pk PRIMARY KEY ( animaltype_id );

CREATE TABLE certificate (
    cert_id        NUMBER(6) NOT NULL,
    cert_completed CHAR(1) NOT NULL,
    cert_expiry    DATE,
    training_id    NUMBER(5) NOT NULL,
    vet_id         NUMBER(4) NOT NULL
);

ALTER TABLE certificate
    ADD CONSTRAINT chk_cert_completed CHECK ( cert_completed IN ( 'N', 'Y' ) );

COMMENT ON COLUMN certificate.cert_id IS
    'Unique identifier for certificate';

COMMENT ON COLUMN certificate.cert_completed IS
    'Whether certificate was given or not (training completed or not)';

COMMENT ON COLUMN certificate.cert_expiry IS
    'Date of expiry for the certificate (if expires)';

COMMENT ON COLUMN certificate.training_id IS
    'Unique identifer for a training';

COMMENT ON COLUMN certificate.vet_id IS
    'Unique identifier for vet';

ALTER TABLE certificate ADD CONSTRAINT certificate_pk PRIMARY KEY ( cert_id );

ALTER TABLE certificate ADD CONSTRAINT certificate_uks UNIQUE ( training_id,
                                                                vet_id );

CREATE TABLE clinic (
    clinic_id      NUMBER(4) NOT NULL,
    clinic_name    VARCHAR2(50) NOT NULL,
    clinic_address VARCHAR2(80) NOT NULL,
    clinic_phoneno CHAR(10) NOT NULL,
    vet_id         NUMBER(4) NOT NULL
);

COMMENT ON COLUMN clinic.clinic_id IS
    'Unique identifier for the clinic';

COMMENT ON COLUMN clinic.clinic_name IS
    'Name of the clinic';

COMMENT ON COLUMN clinic.clinic_address IS
    'Full street address of the clinic';

COMMENT ON COLUMN clinic.clinic_phoneno IS
    'Phone number of the clinic';

COMMENT ON COLUMN clinic.vet_id IS
    'Unique identifier for vet';

CREATE UNIQUE INDEX clinic__idx ON
    clinic (
        vet_id
    ASC );

ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

CREATE TABLE drug (
    drug_id         NUMBER(4) NOT NULL,
    drug_name       VARCHAR2(30) NOT NULL,
    drug_usageinstr VARCHAR2(100) NOT NULL,
    drug_charge     NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN drug.drug_id IS
    'Unique identifier of drug';

COMMENT ON COLUMN drug.drug_name IS
    'Name of drug';

COMMENT ON COLUMN drug.drug_usageinstr IS
    'Usage instructions for the drug';

COMMENT ON COLUMN drug.drug_charge IS
    'Standard charge for the drug in dollars';

ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

CREATE TABLE owner (
    owner_id      NUMBER(6) NOT NULL,
    owner_gname   VARCHAR2(30),
    owner_fname   VARCHAR2(30),
    owner_phoneno CHAR(10) NOT NULL
);

COMMENT ON COLUMN owner.owner_id IS
    'Unique identifier of owner';

COMMENT ON COLUMN owner.owner_gname IS
    'Given name of owner (optional becuase owner may not have given name)';

COMMENT ON COLUMN owner.owner_fname IS
    'Family name of owner (optional because owner may choose not to provide family name)'
    ;

COMMENT ON COLUMN owner.owner_phoneno IS
    'Phone number of owner';

ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

CREATE TABLE prescription (
    visit_id                 NUMBER(7) NOT NULL,
    drug_id                  NUMBER(4) NOT NULL,
    prescription_dosage      VARCHAR2(60) NOT NULL,
    prescription_freqadmin   VARCHAR2(60) NOT NULL,
    prescription_qtysupplied NUMBER(4) NOT NULL,
    prescription_linecost    NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN prescription.visit_id IS
    'Unique identifier for a visit';

COMMENT ON COLUMN prescription.drug_id IS
    'Unique identifier of drug';

COMMENT ON COLUMN prescription.prescription_dosage IS
    'Dosage of drug for prescription';

COMMENT ON COLUMN prescription.prescription_freqadmin IS
    'Frequency of administration for the drug in the prescription';

COMMENT ON COLUMN prescription.prescription_qtysupplied IS
    'Quantity of drug supplied for prescription';

COMMENT ON COLUMN prescription.prescription_linecost IS
    'Line cost for drug prescription';

ALTER TABLE prescription ADD CONSTRAINT prescription_pk PRIMARY KEY ( visit_id,
                                                                      drug_id );

CREATE TABLE service (
    service_code   CHAR(5) NOT NULL,
    service_desc   VARCHAR2(100) NOT NULL,
    service_charge NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN service.service_code IS
    'Service code (unique idenitifier with "ABC00". First three characters uppercase letters, last two characters are numbers)'
    ;

COMMENT ON COLUMN service.service_desc IS
    'Description of service';

COMMENT ON COLUMN service.service_charge IS
    'Standard charge for the service';

ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( service_code );

CREATE TABLE serviceline (
    service_code     CHAR(5) NOT NULL,
    visit_id         NUMBER(7) NOT NULL,
    serviceline_cost NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN serviceline.service_code IS
    'Service code (unique idenitifier with "ABC00". First three characters uppercase letters, last two characters are numbers)'
    ;

COMMENT ON COLUMN serviceline.visit_id IS
    'Unique identifier for a visit';

COMMENT ON COLUMN serviceline.serviceline_cost IS
    'Cost of service (updated by vet for each visit)';

ALTER TABLE serviceline ADD CONSTRAINT serviceline_pk PRIMARY KEY ( service_code,
                                                                    visit_id );

CREATE TABLE speciality (
    speciality_id   NUMBER(3) NOT NULL,
    speciality_name VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN speciality.speciality_id IS
    'Unique Identifyer for Speciality';

COMMENT ON COLUMN speciality.speciality_name IS
    'Name of Speciality';

ALTER TABLE speciality ADD CONSTRAINT speciality_pk PRIMARY KEY ( speciality_id );

CREATE TABLE training (
    training_id       NUMBER(5) NOT NULL,
    training_datetime DATE NOT NULL,
    training_title    VARCHAR2(40) NOT NULL,
    training_duration NUMBER(3, 1) NOT NULL,
    clinic_id         NUMBER(4) NOT NULL,
    vet_id            NUMBER(4) NOT NULL
);

COMMENT ON COLUMN training.training_id IS
    'Unique identifer for a training';

COMMENT ON COLUMN training.training_datetime IS
    'Date and time for the training that took place';

COMMENT ON COLUMN training.training_title IS
    'Title of the training';

COMMENT ON COLUMN training.training_duration IS
    'Duration of the training (in hours)';

COMMENT ON COLUMN training.clinic_id IS
    'Unique identifier for the clinic';

COMMENT ON COLUMN training.vet_id IS
    'Unique identifier for vet';

ALTER TABLE training ADD CONSTRAINT training_pk PRIMARY KEY ( training_id );

CREATE TABLE vet (
    vet_id           NUMBER(4) NOT NULL,
    vet_gname        VARCHAR2(30),
    vet_fname        VARCHAR2(30),
    vet_phoneno      CHAR(10) NOT NULL,
    vet_dateemployed DATE NOT NULL,
    clinic_id        NUMBER(4) NOT NULL,
    speciality_id    NUMBER(3)
);

COMMENT ON COLUMN vet.vet_id IS
    'Unique identifier for vet';

COMMENT ON COLUMN vet.vet_gname IS
    'Given name of vet (optional because vet may not have a given name)';

COMMENT ON COLUMN vet.vet_fname IS
    'Family name of vet (optional because vet may choose not to provide their family name)'
    ;

COMMENT ON COLUMN vet.vet_phoneno IS
    'Phone number of vet';

COMMENT ON COLUMN vet.vet_dateemployed IS
    'Date of employment for vet';

COMMENT ON COLUMN vet.clinic_id IS
    'Unique identifier for the clinic';

COMMENT ON COLUMN vet.speciality_id IS
    'Unique Identifyer for Speciality';

ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

CREATE TABLE visit (
    visit_id           NUMBER(7) NOT NULL,
    visit_datetime     DATE NOT NULL,
    visit_animalweight NUMBER(6, 2) NOT NULL,
    visit_length       NUMBER(3) NOT NULL,
    visit_notes        VARCHAR2(200),
    visit_amount       NUMBER(6, 2) NOT NULL,
    visit_paytype      CHAR(1) NOT NULL,
    animal_id          NUMBER(6) NOT NULL,
    vet_id             NUMBER(4) NOT NULL,
    clinic_id          NUMBER(4) NOT NULL,
    initial_visit_id   NUMBER(7)
);

COMMENT ON COLUMN visit.visit_id IS
    'Unique identifier for a visit';

COMMENT ON COLUMN visit.visit_datetime IS
    'Date and time of visit';

COMMENT ON COLUMN visit.visit_animalweight IS
    'Weight of animal at visit';

COMMENT ON COLUMN visit.visit_length IS
    'Length of visit in minutes';

COMMENT ON COLUMN visit.visit_notes IS
    'Notes from vet about condition of animal';

COMMENT ON COLUMN visit.visit_amount IS
    'Total dollar amount for services and drugs provided at visit';

COMMENT ON COLUMN visit.visit_paytype IS
    'Visit payment type';

COMMENT ON COLUMN visit.animal_id IS
    'Unique identifier for animal';

COMMENT ON COLUMN visit.vet_id IS
    'Unique identifier for vet';

COMMENT ON COLUMN visit.clinic_id IS
    'Unique identifier for the clinic';

COMMENT ON COLUMN visit.initial_visit_id IS
    'Unique identifier for a visit';

ALTER TABLE visit ADD CONSTRAINT visit_pk PRIMARY KEY ( visit_id );

ALTER TABLE visit ADD CONSTRAINT visit_uk UNIQUE ( visit_datetime,
                                                   animal_id );

ALTER TABLE visit
    ADD CONSTRAINT animal_visit FOREIGN KEY ( animal_id )
        REFERENCES animal ( animal_id );

ALTER TABLE animal
    ADD CONSTRAINT animaltype_animal FOREIGN KEY ( animaltype_id )
        REFERENCES animaltype ( animaltype_id );

ALTER TABLE training
    ADD CONSTRAINT clinic_traning FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE vet
    ADD CONSTRAINT clinic_vet FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE visit
    ADD CONSTRAINT clinic_visit FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE prescription
    ADD CONSTRAINT drug_prescription FOREIGN KEY ( drug_id )
        REFERENCES drug ( drug_id );

ALTER TABLE animal
    ADD CONSTRAINT owner_animal FOREIGN KEY ( owner_id )
        REFERENCES owner ( owner_id );

ALTER TABLE serviceline
    ADD CONSTRAINT service_serviceline FOREIGN KEY ( service_code )
        REFERENCES service ( service_code );

ALTER TABLE vet
    ADD CONSTRAINT specialty_vet FOREIGN KEY ( speciality_id )
        REFERENCES speciality ( speciality_id );

ALTER TABLE certificate
    ADD CONSTRAINT training_certificate FOREIGN KEY ( training_id )
        REFERENCES training ( training_id );

ALTER TABLE certificate
    ADD CONSTRAINT vet_certificate FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE clinic
    ADD CONSTRAINT vet_clinic FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE training
    ADD CONSTRAINT vet_traning FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE visit
    ADD CONSTRAINT vet_visit FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE prescription
    ADD CONSTRAINT visit_prescription FOREIGN KEY ( visit_id )
        REFERENCES visit ( visit_id );

ALTER TABLE serviceline
    ADD CONSTRAINT visit_serviceline FOREIGN KEY ( visit_id )
        REFERENCES visit ( visit_id );

ALTER TABLE visit
    ADD CONSTRAINT visit_subsequent_visit FOREIGN KEY ( initial_visit_id )
        REFERENCES visit ( visit_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             1
-- ALTER TABLE                             34
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

SPOOL off
set echo off